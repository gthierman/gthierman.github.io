---
layout: post
title:  "Redesigning Clio's datatable2"
date:   2016-01-23 02:10:43
intro: "The datatable component is core to the Clio experience. It makes up many of the primary views inside of the application, and we wanted to turn component into a powerful tool that our customers could use to extract the data they wanted, in the way they wanted."
image: "placeholder.png"
category: case_studies
---

<section>
  <h2>Problems</h2>
  <p>The main Clio product made widespread use of an older datatable design launched in 2013, and customers had some common complaints that the team wanted to address.</p>

  <h3>Density</h3>
  <p>Customers complained - a lot - about the whitespace in the Clio user experience.  The datatable especially made poor use of the screen real estate and did not allow customers to see enough rows of data to be productive.</p>

  <h3>Functionality</h3>
  <p>The functionality in the datatable was quite basic, with little to no customization.  Customers practicing in different areas of law require different types of information to be displayed, so the ability to customize the table.</p>

  <h3>Clarity</h3>
  <p>The functionality in the datatable was quite basic, with little to no customization.  Customers practicing in different areas of law require different types of information to be displayed, so the ability to customize the table.</p>
  <h4>Weak scroll behaviours</h4>
  <p>The functionality in the datatable was quite basic, with little to no customization.  Customers practicing in different areas of law require different types of information to be displayed, so the ability to customize the table.</p>
  <h4>Weak scroll behaviours</h4>
  <p>The functionality in the datatable was quite basic, with little to no customization.  Customers practicing in different areas of law require different types of information to be displayed, so the ability to customize the table.</p>

</section>

<section>
  <h2>Constraints</h2>
  <p>To allow us to ship value to customers as quickly as possible, the team chose to use Telerik’s Kendo UI to drive many of the base components, so the design would need to make use of the built-in functionality that came with the library. This meant we got a lot of functionality nearly for free and would have to apply that functionality to solve our customers’ unique problems.</p>
</section>
